<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Email">

	<!-- Result maps describe the mapping between the columns returned from 
		a query, and the class properties. A result map isn't necessary if the columns 
		(or aliases) match to the properties exactly. -->
	<resultMap id="EmailResult" type="Email">
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="recever" column="recever" />
		<result property="filename" column="filename" />
		<result property="category" column="category" />
		<result property="regdate" column="regdate" />
	</resultMap> 
	
	
	<insert id="EmailInsert" parameterType="Email">
		insert into Email
		values (
		#{title},
		#{content},
		#{recever, jdbcType=VARCHAR},
		#{filename, jdbcType=VARCHAR},
		#{category},
		sysdate
		)
	</insert>
	
	<select id="listEmail" parameterType="Email" resultMap="EmailResult">
    	select * from (select rownum rn, a.* from (select * from email where category = 1 and category = 2
    	order by regDate) a) where rn
	</select>
	<!--  -->
	<select id="listtempletEmail" parameterType="Email" resultMap="EmailResult">
    	select * from (select rownum rn, a.* from (select * from email where category = 3
    	order by regDate) a) where rn
	</select>
	
	<update id="updateMember" parameterType="Member">
		update member set
		regdate = #{regdate},
		title = #{title}
		content = #{content},
		recever = #{recever, jdbcType=VARCHAR},
		filename = #{filename, jdbcType=VARCHAR},
		category = #{category},
		where regdate = #{regdate}
	</update>
	
	<delete id="templetEmailDelete" parameterType="String">
		delete from email where title = #{title}
	</delete>


<!-- 
	<insert id="insertMember" parameterType="Member">
		insert into member
		values (
		#{nickname}, #{photo, jdbcType=VARCHAR},
		#{password}, #{name}, #{phoneNumber},
		#{email, jdbcType=VARCHAR},
		#{mrank},
		#{usePoint},
		#{maxPoint},
		sysdate,
		sysdate
		)
	</insert>

	<select id="selectEmailPass" parameterType="java.util.Map" resultMap="MemberResult">
		<![CDATA[ select * from member where email=#{email} and password=#{password}]]>


	</select>


	<select id="selectNickname" parameterType="String" resultMap="MemberResult">
		<![CDATA[ select * from member where nickname=#{nickname}]]>

	</select>	

	<select id="selectEmail" parameterType="String" resultMap="MemberResult">
		<![CDATA[ select * from member where password=#{password}]]>
	</select>		

	<update id="updateMember" parameterType="Member">
		update member set
		ninkname = #{nickname},
		photo = #{photo, jdbcType=VARCHAR},
		password = #{password},
		phoneNumber = #{phoneNumber}

		where email = #{email}
	</update>
	<delete id="deleteMember" parameterType="String">
		delete from member where id = #{id}
	</delete>
	<select id="list" parameterType="Member" resultMap="MemberResult">
    	select * from (select rownum rn, a.* from (select * from member
    	order by regDate) a) where rn between #{start} and #{end}
	</select> -->

<!-- 
	<select id="list" parameterType="Emp" resultMap="EmpResult">
    	select * from (select rownum rn, a.* from (select * from emp
    	order by empno) a) where rn between #{start} and #{end}
	</select>
	
	<select id="total" resultType="int" >
		select count(*) from emp
	</select>
	
	<select id="selectEname" parameterType="int" resultMap="EmpResult">
		<![CDATA[select * from emp where empno = #{empno}]]>
	</select>
	
	<insert id="insertEmp" parameterType="Emp">
		insert into emp
		values (
		#{empno}, #{ename}, #{job}, #{mgr} , #{hiredate}, #{sal}, #{comm}, #{deptno} )
	</insert>
	

	
	<delete id="deleteEmp" parameterType="int">
		delete from emp where empno = #{empno}
	</delete>
	
	<update id="updateEmp" parameterType="Emp">
		update emp set
		ename = #{ename},
		job = #{job},
		mgr = #{mgr},
		hiredate = to_date(#{hiredate}, 'yyyy-MM-dd-hh24:mi:ss'),
		sal = #{sal},
		<if test = "comm!=null">
			comm = #{comm},
		</if>
		deptno = #{deptno}
		where
		empno = #{empno}
	</update> -->
	
	<!-- <if test="hiredate = ''">hiredate=${hiredate,}</if> 위 update할때 쌤이 한 방식-->
	
	<!-- <select id="total" parameterType = "Board" resultType="int">
    	select count(*) from board1
    	 <where>
    	 	<if test = "search=='title'">
    				 title like '%'||#{keyword}||'%'list.jsp의 <input type="text" name="keyword">
    			</if>
    			<if test = "search=='writer'">
    				 writer like '%'||#{keyword}||'%'list.jsp의 <input type="text" name="keyword">
    			</if>
    			<if test = "search=='content'">
    				 content like '%'||#{keyword}||'%'list.jsp의 <input type="text" name="keyword">
    			</if>
    			<select name="search"> <if>태그의 test에서 쓰이는 이름
						<option value="title">제목</option>
						<option value="writer">작성자</option>
						<option value="content">내용</option>
					 </select>
    	 </where>
    	 order by id
	</select>
	
	<insert id="insert" parameterType="Board">
		<selectKey order="BEFORE" keyProperty="id" resultType="int">
			select nvl(max(id),0)+1 from board1
		</selectKey>
		insert into board1
		values (
		#{id}, #{title}, #{writer}, #{content} , #{hit}, sysdate )
	</insert>

	<select id="select" parameterType="int" resultType="Board">
		select * from board1 where id = #{id}
	</select>
	<update id="hitUpdate" parameterType="int">
		update board1 set hit = hit + 1 where id = #{id}
	</update>

	 -->

</mapper>
